<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | lianghaijun的博客]]></title>
  <link href="http://lianghaijun.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://lianghaijun.com/"/>
  <updated>2013-12-31T15:36:55+08:00</updated>
  <id>http://lianghaijun.com/</id>
  <author>
    <name><![CDATA[seavers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[chrome  support for sass]]></title>
    <link href="http://lianghaijun.com/blog/2013-02-28-1817854.html"/>
    <updated>2013-02-28T15:51:00+08:00</updated>
    <id>http://lianghaijun.com/blog/1817854</id>
    <content type="html"><![CDATA[<p>chrome  support for sass</p>

<p>很多人说 chrome 已经支持 sass了，但是怎么个支持法，却没有提及，通过google，搜出来一些资料，共享下</p>

<p>chrome开启sass
1. chrome://flags,   启用开发者工具实验  => 点击最下方重启
2. chrome开发者工具(F12), 右下角setttings,experiments,support for sass => 重启
3. OK 可以了</p>

<p>如何使用
1. 使用sass &mdash;watch文件夹， 实时编译 .scss 文件至 .css
<code>
   sass --watch .:. --debug-info --line-number
</code>
其中冒号前后，为监视的目录
2. chrome打开页面, 页面中的link，使用编译后的 .css
3. 开发者工具中， 查看 .css 文件， 已经变成了 .scss文件，并可以点击过去</p>

<p>注意点：
debug调试， .scss 文件只支持 file://</p>

<p>Ps: 原以为会支持实时编译，原来不是，可惜了</p>

<p>参考:</p>

<ul>
<li><a href="http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html">http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html</a></li>
<li><a href="http://wiki.netbeans.org/SourceMapsExampleSASS">http://wiki.netbeans.org/SourceMapsExampleSASS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inline元素上支持的css属性]]></title>
    <link href="http://lianghaijun.com/blog/2012-03-03-1439239.html"/>
    <updated>2012-03-03T22:39:00+08:00</updated>
    <id>http://lianghaijun.com/blog/1439239</id>
    <content type="html"><![CDATA[<p>今天在测试时,意外发现inline元素是可以设置background与border的, 之前有所误解, 故对其它的css属性重新回顾了下</p>

<p>随手写了一个demo:</p>

<p>```</p>

<h3>inline测试</h3>


<div style="width:110px">&nbsp;
<a href="#" style="
    background: #ccc;
    padding: 11px;
    margin-left: 80px;
    line-height: 70px;
    border: 1px solid blue;
">display</a>

<i href="#" style="
    background: #ccc;
    padding: 11px;
    margin-left: 80px;
    line-height: 70px;
    border: 1px solid blue;
    min-width: 10px;
    min-height: 10px;
    overflow: hidden;
    max-width: 10px;
    max-height: 10px;.;
    resize: both;
">inline</i>
</div>


<p>```</p>

<p>经测试
1. inline元素, 有效的: background, margin-left, margin-right, padding, border
2. inline元素, 无效的: width, height, margin-top, margin-bottom
3. 因width, height无效, 因此下列属性也无效: text-align, text-indent, min|max-width|height, overflow
4. 原文字相关的依然有效, 如word-spacing,  word-wrap,  white-space, letter-spacing
5. 下面两个有效, line-height, vertical-align, box-shadow
6. float,position及与之相关top,left, 不考虑, 已经不是inline了</p>

<p>其中 border, line-height, 这两个可以多多利用</p>

<p><em>思考:</em>
1. inline元素的宽高是不能定义, 即宽高度是由inline元素inline内容的元素决定的,(ie6,ie7下高度会受inline-block元素的影响)
2. 即宽高完全是自适应而得出的, 因此也不存在overflow的问题, min|max-width|height也没有影响
3. margin四个属性, left|right 与 top|bottom 有不同的待遇
4. margin-top, margin-bottom, 可以用line-height模拟, 但有很大不同, 与inline-block也不兼容,  另 margin:0 auto的居中效果, 也没有作用</p>

<p>*其次: *
1. div元素, 使用 display:inline 以上几条也成立
2. button元素, 使用display:inline, 样式没有变化, 等于于inline-block</p>

<p>*最后: *
mdn中说: 默认 inline-level 的元素 (inline + inline-block)</p>

<ul>
<li>b, big, i, small, tt</li>
<li>abbr, acronym, cite, code, dfn, em, kbd, strong, samp, var</li>
<li>a, bdo, br, img, map, object, q, script, span, sub, sup</li>
<li>button, input, label, select, textarea</li>
</ul>


<p>其中img, button, input, label, select, textarea 并没有以上的特征, 测试了一下, 设置inline与inline-block, 效果是一样的, 没有变化, 都等同于设置了inline-block</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[display, position, float 之间的关系]]></title>
    <link href="http://lianghaijun.com/blog/2011-09-17-1174269.html"/>
    <updated>2011-09-17T22:52:00+08:00</updated>
    <id>http://lianghaijun.com/blog/1174269</id>
    <content type="html"><![CDATA[<p>从 css2.1 规范中翻译而来
出处见: <a href="http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo">http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo</a></p>

<p>Ps: 原文中的box未翻译, 可理解为盒模型, 或盒子</p>

<p>影响 产生box及布局的三个属性 &ndash; display, position, float 之间的关系如下:</p>

<ul>
<li>如果 display 的值为none, 则忽略position与float, 这种情况下, 元素不产生box</li>
<li>如果 position 的值为 absolute 或者 fixed, 则box绝对定位, float的值设定为 none , display 的值按照下面的表格来设定. box 的定位将决定于 top, right, bottom, left 属性及box的容器</li>
<li>如果 float 的值不是 none, 则 box 是浮动的且 display 按照下面的表格来设定</li>
<li>如果元素是根元素, display 按下面的表格来设定, 有一个例外: 当指定的值为list-item时,将变成计算后的 block 还是 list-item, 这点没有在CSS2.1中定义   (这句话不会翻译了)</li>
<li>剩余的 display 按照指定的方式来显示</li>
</ul>


<p>[table]
|specified value| computed value |
|inline-table   | table          |
|inline, table-row-group, table-column, table-column-group, table-header-group, table-footer-group, table-row, table-cell, table-caption, inline-block| block |
|others|same as specified |
[/table]</p>
]]></content>
  </entry>
  
</feed>
