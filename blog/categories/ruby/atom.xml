<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | lianghaijun的博客]]></title>
  <link href="http://lianghaijun.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://lianghaijun.com/"/>
  <updated>2013-12-31T13:26:53+08:00</updated>
  <id>http://lianghaijun.com/</id>
  <author>
    <name><![CDATA[seavers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ruby spider]]></title>
    <link href="http://lianghaijun.com/blog/ruby-spider"/>
    <updated>2013-12-23T21:19:09+08:00</updated>
    <id>http://lianghaijun.com/blog/ruby-spider</id>
    <content type="html"><![CDATA[<p>最近开始喜欢上研究ruby了,正好手头有一些抓取的需求,正好练练手</p>

<p>在写爬虫时,我们总希望能方便的实现以下功能</p>

<ul>
<li>类似curl的下载模块,提供URL即可获取下载内容</li>
<li>方便的网页分析工具,最好能提供类似css selector的元素选择器</li>
<li>简单方便的数据处理模块</li>
</ul>


<p>写个简单的例子
```</p>

<h1>encoding:utf-8</h1>

<p>require &lsquo;open-uri&rsquo;
require &lsquo;nokogiri&rsquo;</p>

<p>def spide</p>

<pre><code>url = "http://home.photo.qq.com/index.php?mod=activity&amp;act=detail&amp;category_id=1"

html = open(url).read
doc = Nokogiri::HTML(html)

list = doc.search('.photo-list li img')
list.each { |x|
    src = x.attr('src')
    puts src.gsub(/400/, '800');
}
</code></pre>

<p>end</p>

<p>spide
```</p>

<p>其中:</p>

<ol>
<li>open-uri模块用于实现curl的功能, open后read即可</li>
<li>Nokogiri为html分析模块,支持css selector式的元素选择</li>
<li>而ruby本身的特点, 则可快速处理数据</li>
</ol>


<p>抓到图片URL后,剩下的就容易多了,都下载下来吧~~</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
